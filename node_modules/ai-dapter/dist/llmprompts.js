"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var utils_1 = __importDefault(require("./utils"));
var LLMPrompts = (function () {
    function LLMPrompts() {
        this.utils = new utils_1.default();
    }
    LLMPrompts.prototype.forRealtimeSources = function (input, apiRepository) {
        var system = "# System";
        system += "\n    You are an API server that identifies suitable API endpoints only from the provided API repository and responds in the specified JSON format. Once the APIs have been identified, you are expected to first keep track of all the placeholders and then replace them with valid URL-encoded values. The API repository provided below consists of various fields which will help you (1) identify the APIs, and (2) determine appropriate placeholder values that meets the specified validation requirement.\n    ";
        var context = "# Context";
        context += "\n    API repository -\n    Note: It is mandatory to identify API endpoints from only within the following list and that you should not use any prior knowledge or other sources.\n    \"\"\"";
        apiRepository.forEach(function (api, i) {
            context += "\n      - " + JSON.stringify(api) + "\n      ";
        });
        context += "\n    \"\"\"\n    ";
        var format = "# Format";
        var apiidresult = [
            {
                "api": { "method": "?", "url": "?", "headers": "?" },
                "placeholders": [
                    {
                        "placeholder": "placeholders from API repository. Today's date is, " + new Date().toDateString() + ", and can be used to derive dates relative to today.",
                        "determined": "Boolean true a valid placeholder value was determined by you | false if placeholder value does not meet the validation criteria which is mentioned in the API endpoint.",
                    },
                ],
                "status": "say 'OK' only if all 'determined' fields are true, else say 'NOT-OK'"
            }
        ];
        format += "\n    You must strictly follow the below JSON structure to generate your response.\n    ---\n    {\n      \"api_endpoints\":\n    ";
        format += JSON.stringify(apiidresult);
        format += "\n    }\n    ---\n    ";
        var task = "# Task";
        task += "\n    Look at my question below and provide response as instructed above. However, before providing your final response, go through it step by step and validate the following:\n    - whether all APIs have been identified based on my question,\n    - whether all placeholders values have been identified.\n    - whether the API endpoint is updated with placeholder values.\n    " + input + "\n    ";
        var prompt = {
            "system": system,
            "context": context,
            "format": format,
            "task": task
        };
        return prompt;
    };
    ;
    LLMPrompts.prototype.forResponseWithData = function (input, data, agent) {
        var system = "# System";
        system += "\n    You are a digital " + (agent.role ? agent.role : "assistant") + (agent.personality ? " with " + agent.personality + " personality." : " who responds in the specified JSON format. ");
        system += "" + (agent.expert_at ? "You are also an expert at " + agent.expert_at + ". " : "");
        system += "\n    You must rely only on the provided context to generate a response and must not use your prior knowledge or general knowledge to respond to the question. You must politely decline to engage in any conversation related to legal advise, law and order, medical guidance, financial guidance, and abusive or profanity-based topics. \n    ";
        var context = "# Context \n    \"\"\"\n    ";
        context += JSON.stringify(data);
        context += "\n    \"\"\"\n      ";
        var format = "# Format";
        var llmResponse = {
            "response": "Provide your response  using basic markdown formatting elements as follows: (1) If you have all the information to respond to the question completely, please do so within " + (agent.max_words ? (agent.max_words > 200 ? 200 : agent.max_words) : 200) + " words. Create appropriate sections, titles, tables, etc. (2) If you find any information is missing, please provide clear guidance on what you would need to provide a more complete response.",
            "status": "Say 'OK' if there was no missing information in the input, else say 'FOLLOW-UP'",
            "additional_context": {
                "original_question": input,
                "response_summary": "Summarize the context of this conversation in less than 50 words. Include who and what is this conversation about.",
                "entities": {
                    "Entity Type from the conversation": ["Array of Corresponding Entity Values"]
                }
            }
        };
        format += "\n    You must strictly follow the below JSON structure to generate your response.\n    ---\n    ";
        format += JSON.stringify(llmResponse);
        format += "\n    ---\n    ";
        var task = "# Task";
        task += "\n    Look at my question below and provide response as instructed above.\n    " + input + "\n";
        var prompt = {
            "system": system,
            "context": context,
            "format": format,
            "task": task
        };
        return prompt;
    };
    ;
    return LLMPrompts;
}());
;
module.exports = LLMPrompts;

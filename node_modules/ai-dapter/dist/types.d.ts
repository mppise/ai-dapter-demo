declare namespace Types {
    type apiEndpoint = {
        "method": string;
        "url": string;
        "headers"?: any;
        "data"?: any;
    };
    type placeholders = {
        "placeholder": string;
        "validation_criteria": string;
        "default"?: string;
    };
    type placeholderidResult = {
        "placeholder": string;
        "determined": any;
    };
    export type LLMModelConfig = {
        "provider": "OpenAI";
        "model_name": string;
        "endpoint": string;
        "authentication": {
            "api_key"?: string;
            "org_id"?: string;
        };
    };
    export type AgentConfig = {
        "role": string;
        "personality"?: string;
        "expert_at"?: string;
        "max_words"?: number;
    };
    export type DataConfig = {
        "max_records": number;
        "max_contexts"?: number;
        "additional_context"?: Array<any>;
    };
    export type APIRepository = {
        "api_info": {
            "title": string;
            "description": string;
        };
        "api_endpoint": apiEndpoint;
        "placeholders": Array<placeholders>;
    };
    export type APIidResult = {
        "api": apiEndpoint;
        "placeholders": Array<placeholderidResult>;
        "status": string;
    };
    export type LLMResponse = {
        "response": string;
        "status": string;
        "additional_context": {
            "original_question": string;
            "response_summary": string;
            "entities": any;
        };
    };
    export type AIDapterOptions = {
        "agentConfig": Types.AgentConfig;
        "dataConfig": Types.DataConfig;
    };
    export {};
}
export = Types;
//# sourceMappingURL=types.d.ts.map